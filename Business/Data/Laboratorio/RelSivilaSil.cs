/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class RelSivilaSil : Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idrelsivilasil; 
        private int m_idsivilagrupo;
        private int m_idsivilaetiologia;		
		private string m_codigosil;
        private string m_semana;
        private int m_cantidadregistros;
		private Usuario m_idusuarioregistro; 
		private DateTime m_fecharegistro; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public RelSivilaSil()
		{
			m_idrelsivilasil = 0; 
			m_idsivilagrupo = 0; 
			m_idsivilaetiologia = 0; 
			m_codigosil =  String.Empty;
            m_semana = String.Empty;
            m_cantidadregistros = 0;
			m_idusuarioregistro = new Usuario(); 
			m_fecharegistro = DateTime.MinValue; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
        public RelSivilaSil(
            int idsivilagrupo,
            int idsivilaetiologia,
            string codigosil, 		
            string semana,
            int cantidadregistros,
			Usuario idusuarioregistro, 
			DateTime fecharegistro)
			: this()
		{
            m_idsivilagrupo = idsivilagrupo;
            m_idsivilaetiologia = idsivilaetiologia;
            m_codigosil = codigosil;
            m_semana = semana;
            m_cantidadregistros = cantidadregistros;
			m_idusuarioregistro = idusuarioregistro;
			m_fecharegistro = fecharegistro;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
        public int IdRelSivilaSil
		{
			get { return m_idrelsivilasil; }
			set
			{
                m_isChanged |= (m_idrelsivilasil != value);
                m_idrelsivilasil = value;
			}

		}


        public string CodigoSil
		{
			get { return m_codigosil; }

			set	
			{	
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for Nombre", value, "null");
				
				if(  value.Length > 500)
					throw new ArgumentOutOfRangeException("Invalid value for Nombre", value, value.ToString());

                m_isChanged |= (m_codigosil != value); m_codigosil = value;
			}
		}

        public string Semana
        {
            get { return m_semana; }

            set
            {
                if (value == null)
                    throw new ArgumentOutOfRangeException("Null value not allowed for Nombre", value, "null");

                if (value.Length > 500)
                    throw new ArgumentOutOfRangeException("Invalid value for Nombre", value, value.ToString());

                m_isChanged |= (m_semana != value); m_semana = value;
            }
        }
			
			
		/// <summary>
		/// 
		/// </summary>
        public int IdSivilaGrupo
        {
            get { return m_idsivilagrupo; }
            set
            {
                m_isChanged |= (m_idsivilagrupo != value);
                m_idsivilagrupo = value;
            }

        }

        public int CantidadRegistros
        {
            get { return m_cantidadregistros; }
            set
            {
                m_isChanged |= (m_cantidadregistros != value);
                m_cantidadregistros = value;
            }

        }
			
		/// <summary>
		/// 
		/// </summary>
        public int IdSivilaEtiologia
        {
            get { return m_idsivilaetiologia; }
            set
            {
                m_isChanged |= (m_idsivilaetiologia != value);
                m_idsivilaetiologia = value;
            }

        }
      
		/// <summary>
		/// 
		/// </summary>
		public Usuario IdUsuarioRegistro
		{
			get { return m_idusuarioregistro; }
			set
			{
				m_isChanged |= ( m_idusuarioregistro != value ); 
				m_idusuarioregistro = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public DateTime FechaRegistro
		{
			get { return m_fecharegistro; }
			set
			{
				m_isChanged |= ( m_fecharegistro != value ); 
				m_fecharegistro = value;
			}

		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}

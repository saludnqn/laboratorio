/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class DetallePerfilAntibiotico: Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_iddetalleperfilantibiotico; 
		private int m_idperfilantibiotico; 
		private int m_idantibiotico; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DetallePerfilAntibiotico()
		{
			m_iddetalleperfilantibiotico = 0; 
			m_idperfilantibiotico = 0; 
			m_idantibiotico = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public DetallePerfilAntibiotico(
			int idperfilantibiotico, 
			int idantibiotico)
			: this()
		{
			m_idperfilantibiotico = idperfilantibiotico;
			m_idantibiotico = idantibiotico;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdDetallePerfilAntibiotico
		{
			get { return m_iddetalleperfilantibiotico; }
			set
			{
				m_isChanged |= ( m_iddetalleperfilantibiotico != value ); 
				m_iddetalleperfilantibiotico = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdPerfilAntibiotico
		{
			get { return m_idperfilantibiotico; }
			set
			{
				m_isChanged |= ( m_idperfilantibiotico != value ); 
				m_idperfilantibiotico = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdAntibiotico
		{
			get { return m_idantibiotico; }
			set
			{
				m_isChanged |= ( m_idantibiotico != value ); 
				m_idantibiotico = value;
			}

		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}

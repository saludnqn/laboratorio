/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
    public sealed class AgendaDia : Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idagendadia; 
		private Agenda m_idagenda; 
		private Efector m_idefector; 
		private int m_dia; 
		private int m_limiteturnos;
        private string m_horadesde;
        private string m_horahasta;
        private int m_tipoturno;
        private int m_frecuencia;
        


		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public AgendaDia()
		{
			m_idagendadia = 0; 
			m_idagenda = new Agenda(); 
			m_idefector = new Efector(); 
			m_dia = 0; 
			m_limiteturnos = 0;
            m_horadesde = String.Empty;
            m_horahasta = String.Empty;
            m_tipoturno = 0;
            m_frecuencia = 0;
        
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public AgendaDia(
			Agenda idagenda, 
			Efector idefector, 
			int dia, 
			int limiteturnos,
            string horadesde,
            string horahasta)
			: this()
		{
			m_idagenda = idagenda;
			m_idefector = idefector;
			m_dia = dia;
			m_limiteturnos = limiteturnos;
            m_horadesde = horadesde;
            m_horahasta = horahasta;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdAgendaDia
		{
			get { return m_idagendadia; }
			set
			{
				m_isChanged |= ( m_idagendadia != value ); 
				m_idagendadia = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Agenda IdAgenda
		{
			get { return m_idagenda; }
			set
			{
				m_isChanged |= ( m_idagenda != value ); 
				m_idagenda = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Efector IdEfector
		{
			get { return m_idefector; }
			set
			{
				m_isChanged |= ( m_idefector != value ); 
				m_idefector = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int Dia
		{
			get { return m_dia; }
			set
			{
				m_isChanged |= ( m_dia != value ); 
				m_dia = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int LimiteTurnos
		{
			get { return m_limiteturnos; }
			set
			{
				m_isChanged |= ( m_limiteturnos != value ); 
				m_limiteturnos = value;
			}

		}



        public string HoraDesde
        {
            get { return m_horadesde; }

            set
            {
                if (value == null)
                    throw new ArgumentOutOfRangeException("Null value not allowed for HoraDesde", value, "null");

                if (value.Length > 5)
                    throw new ArgumentOutOfRangeException("Invalid value for HoraDesde", value, value.ToString());

                m_isChanged |= (m_horadesde != value); m_horadesde = value;
            }
        }

        public string HoraHasta
        {
            get { return m_horahasta; }

            set
            {
                if (value == null)
                    throw new ArgumentOutOfRangeException("Null value not allowed for m_horahasta", value, "null");

                if (value.Length > 5)
                    throw new ArgumentOutOfRangeException("Invalid value for m_horahasta", value, value.ToString());

                m_isChanged |= (m_horahasta != value); m_horahasta = value;
            }
        }


        public int TipoTurno
        {
            get { return m_tipoturno; }
            set
            {
                m_isChanged |= (m_tipoturno != value);
                m_tipoturno = value;
            }

        }

        public int Frecuencia
        {
            get { return m_frecuencia; }
            set
            {
                m_isChanged |= (m_frecuencia != value);
                m_frecuencia = value;
            }

        }

    
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}

/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class Antibiograma: Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idantibiograma; 
		private Efector m_idefector; 
		private Protocolo m_idprotocolo;
        private int m_iditem;
        private int m_numeroaislamiento;
		private Germen m_idgermen;
        private int m_idmetodologia;
		private Antibiotico m_idantibiotico; 
		private string m_resultado;
        private string m_valor;
		private int m_idusuarioregistro; 
		private DateTime m_fecharegistro;
        private int m_idusuariovalida;
        private DateTime m_fechavalida;
        private bool m_validavalor;
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public Antibiograma()
		{
			m_idantibiograma = 0; 
			m_idefector = new Efector(); 
			m_idprotocolo = new Protocolo();
            m_numeroaislamiento = 0;

            m_iditem = 0;
			m_idgermen = new Germen();
            m_idmetodologia = 0;
			m_idantibiotico = new Antibiotico(); 
			m_resultado = String.Empty;
            m_valor = String.Empty;
            m_idusuarioregistro = 0;
			m_fecharegistro = DateTime.MinValue;
            m_idusuariovalida = 0;
            m_fechavalida = DateTime.MinValue;
            m_validavalor = false;
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public Antibiograma(
			Efector idefector, 
			Protocolo idprotocolo, 
			Germen idgermen, 
			Antibiotico idantibiotico, 
            int numeroaislamiento,
            int idmetodologia,
			string resultado, 
            string valor,
			int idusuarioregistro, 
			DateTime fecharegistro,int idusuariovalida, 
			DateTime fechavalida,
            bool validaValor
        )
			: this()
		{
			m_idefector = idefector;
			m_idprotocolo = idprotocolo;
			m_idgermen = idgermen;
            m_idmetodologia = idmetodologia;
			m_idantibiotico = idantibiotico;
            m_numeroaislamiento = numeroaislamiento;
			m_resultado = resultado;
            m_valor = valor;
			m_idusuarioregistro = idusuarioregistro;
			m_fecharegistro = fecharegistro;
            m_idusuariovalida = idusuariovalida;
            m_fechavalida = fechavalida;
            m_validavalor = validaValor;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdAntibiograma
		{
			get { return m_idantibiograma; }
			set
			{
				m_isChanged |= ( m_idantibiograma != value ); 
				m_idantibiograma = value;
			}

		}
        public int IdItem
        {
            get { return m_iditem; }
            set
            {
                m_isChanged |= (m_iditem != value);
                m_iditem = value;
            }

        }

        public int NumeroAislamiento
        {
            get { return m_numeroaislamiento; }
            set
            {
                m_isChanged |= (m_numeroaislamiento != value);
                m_numeroaislamiento = value;
            }

        }
		/// <summary>
		/// 
		/// </summary>
		public Efector IdEfector
		{
			get { return m_idefector; }
			set
			{
				m_isChanged |= ( m_idefector != value ); 
				m_idefector = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Protocolo IdProtocolo
		{
			get { return m_idprotocolo; }
			set
			{
				m_isChanged |= ( m_idprotocolo != value ); 
				m_idprotocolo = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Germen IdGermen
		{
			get { return m_idgermen; }
			set
			{
				m_isChanged |= ( m_idgermen != value ); 
				m_idgermen = value;
			}

		}
        public int IdMetodologia
        {
            get { return m_idmetodologia; }
            set
            {
                m_isChanged |= (m_idmetodologia != value);
                m_idmetodologia = value;
            }

        }
		/// <summary>
		/// 
		/// </summary>
		public Antibiotico IdAntibiotico
		{
			get { return m_idantibiotico; }
			set
			{
				m_isChanged |= ( m_idantibiotico != value ); 
				m_idantibiotico = value;
			}

		}
        public string Valor
        {
            get { return m_valor; }

            set
            {
                if (value == null)
                    throw new ArgumentOutOfRangeException("Null value not allowed for m_valor", value, "null");

                if (value.Length > 50)
                    throw new ArgumentOutOfRangeException("Invalid value for m_valor", value, value.ToString());

                m_isChanged |= (m_valor != value); m_valor = value;
            }
        }
			
		/// <summary>
		/// 
		/// </summary>
		public string Resultado
		{
			get { return m_resultado; }

			set	
			{	
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for Resultado", value, "null");
				
				if(  value.Length > 50)
					throw new ArgumentOutOfRangeException("Invalid value for Resultado", value, value.ToString());
				
				m_isChanged |= (m_resultado != value); m_resultado = value;
			}
		}
			
		/// <summary>
		/// 
		/// </summary>


        public int IdUsuarioRegistro
        {
            get { return m_idusuarioregistro; }
            set
            {
                m_isChanged |= (m_idusuarioregistro != value);
                m_idusuarioregistro = value;
            }

        }
		/// <summary>
		/// 
		/// </summary>
		public DateTime FechaRegistro
		{
			get { return m_fecharegistro; }
			set
			{
				m_isChanged |= ( m_fecharegistro != value ); 
				m_fecharegistro = value;
			}

		}
        /// <summary>
        /// 
        /// </summary>
        public int IdUsuarioValida
        {
            get { return m_idusuariovalida; }
            set
            {
                m_isChanged |= (m_idusuariovalida != value);
                m_idusuariovalida = value;
            }

        }

        /// <summary>
        /// 
        /// </summary>
        public DateTime FechaValida
        {
            get { return m_fechavalida; }
            set
            {
                m_isChanged |= (m_fechavalida != value);
                m_fechavalida = value;
            }

        }

        public bool ValidaValor
        {
            get { return m_validavalor; }
            set
            {
                m_isChanged |= (m_validavalor != value);
                m_validavalor = value;
            }

        }
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}

/*
insert license info here
*/
using System;
using System.Collections;
using Business.Data.Laboratorio;

namespace Business.Data.Laboratorio
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class DetalleHojaTrabajo: Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_iddetallehojatrabajo; 
		private HojaTrabajo m_idhojatrabajo; 
		private Efector m_idefector; 
		private Item m_iditem; 

		private string m_textoimprimir;
        //private int m_ancho;
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public DetalleHojaTrabajo()
		{
			m_iddetallehojatrabajo = 0; 
			m_idhojatrabajo = new HojaTrabajo(); 
			m_idefector = new Efector(); 
			m_iditem = new Item(); 
			m_textoimprimir = String.Empty;
            //m_ancho = 0;
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public DetalleHojaTrabajo(
			HojaTrabajo idhojatrabajo, 
			Efector idefector, 
			Item iditem, 
            //int ancho,
			string textoimprimir)
			: this()
		{
			m_idhojatrabajo = idhojatrabajo;
			m_idefector = idefector;
			m_iditem = iditem;
			m_textoimprimir = textoimprimir;
            //m_ancho = ancho;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdDetalleHojaTrabajo
		{
			get { return m_iddetallehojatrabajo; }
			set
			{
				m_isChanged |= ( m_iddetallehojatrabajo != value ); 
				m_iddetallehojatrabajo = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public HojaTrabajo IdHojaTrabajo
		{
			get { return m_idhojatrabajo; }
			set
			{
				m_isChanged |= ( m_idhojatrabajo != value ); 
				m_idhojatrabajo = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Efector IdEfector
		{
			get { return m_idefector; }
			set
			{
				m_isChanged |= ( m_idefector != value ); 
				m_idefector = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public Item IdItem
		{
			get { return m_iditem; }
			set
			{
				m_isChanged |= ( m_iditem != value ); 
				m_iditem = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public string TextoImprimir
		{
			get { return m_textoimprimir; }

			set	
			{	
				if( value == null )
					throw new ArgumentOutOfRangeException("Null value not allowed for TextoImprimir", value, "null");
				
				if(  value.Length > 200)
					throw new ArgumentOutOfRangeException("Invalid value for TextoImprimir", value, value.ToString());
				
				m_isChanged |= (m_textoimprimir != value); m_textoimprimir = value;
			}
		}


        //public int Ancho
        //{
        //    get { return m_ancho; }
        //    set
        //    {
        //        m_isChanged |= (m_ancho != value);
        //        m_ancho = value;
        //    }

        //}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}

/*
insert license info here
*/
using System;
using System.Collections;

namespace Business.Data
{
	/// <summary>
	///	Generated by MyGeneration using the NHibernate Object Mapping template
	/// </summary>
	[Serializable]
	public sealed class ModuloObjeto: Business.BaseDataAccess
	{

		#region Private Members
		private bool m_isChanged;

		private int m_idrelmoduloobjeto; 
		private int m_idmodulo; 
		private int m_idobjeto; 		
		#endregion

		#region Default ( Empty ) Class Constuctor
		/// <summary>
		/// default constructor
		/// </summary>
		public ModuloObjeto()
		{
			m_idrelmoduloobjeto = 0; 
			m_idmodulo = 0; 
			m_idobjeto = 0; 
		}
		#endregion // End of Default ( Empty ) Class Constuctor

		#region Required Fields Only Constructor
		/// <summary>
		/// required (not null) fields only constructor
		/// </summary>
		public ModuloObjeto(
			int idmodulo, 
			int idobjeto)
			: this()
		{
			m_idmodulo = idmodulo;
			m_idobjeto = idobjeto;
		}
		#endregion // End Required Fields Only Constructor

		#region Public Properties
			
		/// <summary>
		/// 
		/// </summary>
		public int IdRelModuloObjeto
		{
			get { return m_idrelmoduloobjeto; }
			set
			{
				m_isChanged |= ( m_idrelmoduloobjeto != value ); 
				m_idrelmoduloobjeto = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdModulo
		{
			get { return m_idmodulo; }
			set
			{
				m_isChanged |= ( m_idmodulo != value ); 
				m_idmodulo = value;
			}

		}
			
		/// <summary>
		/// 
		/// </summary>
		public int IdObjeto
		{
			get { return m_idobjeto; }
			set
			{
				m_isChanged |= ( m_idobjeto != value ); 
				m_idobjeto = value;
			}

		}
			
		/// <summary>
		/// Returns whether or not the object has changed it's values.
		/// </summary>
		public bool IsChanged
		{
			get { return m_isChanged; }
		}
				
		#endregion 
	}
}
